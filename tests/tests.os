// BSLLS:UnusedLocalMethod-off
// BSLLS:DuplicateStringLiteral-off
// BSLLS:DuplicatedInsertionIntoCollection-off

#Использовать autumn
#Использовать asserts
#Использовать ".."

Процедура ПередЗапускомТеста()
	Сообщить("Перед запуском теста");
КонецПроцедуры

Процедура ПослеЗапускаТеста()
	Сообщить("После запуска теста");
КонецПроцедуры

Функция ПолучитьПоделку()

	Поделка = Новый Поделка();
	Поделка.ЗапуститьПриложение();
	Возврат Поделка;

КонецФункции

&Тест
Процедура ПроверитьЧтоПустыеКонфигурацииИдентичны() Экспорт

	// Дано

	Поделка = ПолучитьПоделку();
	ОписаниеОбъекта1 = Поделка.НайтиЖелудь("ОписаниеОбъекта");
	ОписаниеОбъекта2 = Поделка.НайтиЖелудь("ОписаниеОбъекта");

	// Когда

	Конфигурация1 = Новый Массив();
	ОписаниеОбъекта1.УстановитьДанные(Конфигурация1);
	Конфигурация2 = Новый Массив();
	ОписаниеОбъекта2.УстановитьДанные(Конфигурация2);
	ДанныеИдентичны = ОписаниеОбъекта1.ДанныеИдентичныОбъекту(ОписаниеОбъекта2);

	// Тогда

	Ожидаем.Что(ДанныеИдентичны, "Идентичны пустые конфигурации").Равно(Истина);
	
КонецПроцедуры

&Тест
Процедура ПроверитьЧтоИдентичныеКонфигурацииИдентичны() Экспорт

	// Дано

	Поделка = ПолучитьПоделку();
	ОписаниеОбъекта1 = Поделка.НайтиЖелудь("ОписаниеОбъекта");
	ОписаниеОбъекта2 = Поделка.НайтиЖелудь("ОписаниеОбъекта");

	// Когда

	Конфигурация1 = Новый Массив();
	Конфигурация1.Добавить("Индекс = 1;");
	Конфигурация1.Добавить("Сообщить(Индекс);");
	ОписаниеОбъекта1.УстановитьДанные(Конфигурация1);
	Конфигурация2 = Новый Массив();
	Конфигурация2.Добавить("Индекс = 1;");
	Конфигурация2.Добавить("Сообщить(Индекс);");
	ОписаниеОбъекта2.УстановитьДанные(Конфигурация2);
	ДанныеИдентичны = ОписаниеОбъекта1.ДанныеИдентичныОбъекту(ОписаниеОбъекта2);

	// Тогда

	Ожидаем.Что(ДанныеИдентичны, "Конфигурации идентичны").Равно(Истина);
	
КонецПроцедуры

&Тест
Процедура ПроверитьЧтоКонфигурацииОтличающиесяПробеломРазличны() Экспорт

	// Дано

	Поделка = ПолучитьПоделку();
	ОписаниеОбъекта1 = Поделка.НайтиЖелудь("ОписаниеОбъекта");
	ОписаниеОбъекта2 = Поделка.НайтиЖелудь("ОписаниеОбъекта");

	// Когда

	Конфигурация1 = Новый Массив();
	Конфигурация1.Добавить("Индекс = 1; ");
	Конфигурация1.Добавить("Сообщить(Индекс);");
	ОписаниеОбъекта1.УстановитьДанные(Конфигурация1);
	Конфигурация2 = Новый Массив();
	Конфигурация2.Добавить("Индекс = 1;");
	Конфигурация2.Добавить("Сообщить(Индекс);");
	ОписаниеОбъекта2.УстановитьДанные(Конфигурация2);
	ДанныеИдентичны = ОписаниеОбъекта1.ДанныеИдентичныОбъекту(ОписаниеОбъекта2);

	// Тогда

	Ожидаем.Что(ДанныеИдентичны, "Конфигурации идентичны").Равно(Ложь);
	
КонецПроцедуры

&Тест
Процедура ПроверитьЧтоКонфигурацииСРазнымКоличествомСтрокРазличны() Экспорт

	// Дано

	Поделка = ПолучитьПоделку();
	ОписаниеОбъекта1 = Поделка.НайтиЖелудь("ОписаниеОбъекта");
	ОписаниеОбъекта2 = Поделка.НайтиЖелудь("ОписаниеОбъекта");

	// Когда

	Конфигурация1 = Новый Массив();
	Конфигурация1.Добавить("Индекс = 1;");
	ОписаниеОбъекта1.УстановитьДанные(Конфигурация1);
	Конфигурация2 = Новый Массив();
	Конфигурация2.Добавить("Индекс = 1;");
	Конфигурация2.Добавить("Сообщить(Индекс);");
	ОписаниеОбъекта2.УстановитьДанные(Конфигурация2);
	ДанныеИдентичны = ОписаниеОбъекта1.ДанныеИдентичныОбъекту(ОписаниеОбъекта2);

	// Тогда

	Ожидаем.Что(ДанныеИдентичны, "Конфигурации идентичны").Равно(Ложь);
	
КонецПроцедуры

&Тест
Процедура ПроверитьРезультатОбъединенияКонфигураций_Модули_01() Экспорт

	// Дано

	Поделка = ПолучитьПоделку();
	ОписаниеОбъекта1 = Поделка.НайтиЖелудь("ОписаниеОбъекта");
	ОписаниеОбъекта2 = Поделка.НайтиЖелудь("ОписаниеОбъекта");

	// Когда

	Конфигурация1 = Новый Массив();
	Конфигурация1.Добавить("Перем Переменная1");
	Конфигурация1.Добавить("Сообщить(Переменная1)");
	ОписаниеОбъекта1.УстановитьДанные(Конфигурация1);
	Конфигурация2 = Новый Массив();
	Конфигурация2.Добавить("Перем Переменная1");
	Конфигурация2.Добавить("Сообщить(Переменная1)");
	ОписаниеОбъекта2.УстановитьДанные(Конфигурация2);
	ОжидаемыйОбъект = Поделка.НайтиЖелудь("ОписаниеОбъекта");
	ОжидаемыйРезультат = Новый Массив();
	ОжидаемыйРезультат.Добавить("Перем Переменная1");
	ОжидаемыйРезультат.Добавить("Сообщить(Переменная1)");
	ОжидаемыйОбъект.УстановитьДанные(ОжидаемыйРезультат);

	// Тогда

	Приложение = Поделка.НайтиЖелудь("Приложение");
	ИтоговыйОбъект = Поделка.НайтиЖелудь("ОписаниеОбъекта");
	Результат = Приложение.ПолучитьРезультатОбъединения(Конфигурация1, Конфигурация2);
	ИтоговыйОбъект.УстановитьДанные(Результат);
	Ожидаем.
		Что(
			ОжидаемыйОбъект.КакСтрока(),
			"Совпадает с ожидаемым результатом объединения")
		.Равно(ИтоговыйОбъект.КакСтрока()
	);
	
КонецПроцедуры

&Тест
Процедура ПроверитьРезультатОбъединенияКонфигураций_Модули_02() Экспорт

	// Дано

	Поделка = ПолучитьПоделку();
	ОписаниеОбъекта1 = Поделка.НайтиЖелудь("ОписаниеОбъекта");
	ОписаниеОбъекта2 = Поделка.НайтиЖелудь("ОписаниеОбъекта");

	// Когда

	Конфигурация1 = Новый Массив();
	Конфигурация1.Добавить("Перем Переменная1;");
	ОписаниеОбъекта1.УстановитьДанные(Конфигурация1);
	Конфигурация2 = Новый Массив();
	Конфигурация2.Добавить("Перем Переменная2;");
	ОписаниеОбъекта2.УстановитьДанные(Конфигурация2);
	ОжидаемыйОбъект = Поделка.НайтиЖелудь("ОписаниеОбъекта");
	ОжидаемыйРезультат = Новый Массив();
	ОжидаемыйРезультат.Добавить("//{{MRG[ <-> ]");
	ОжидаемыйРезультат.Добавить("Перем Переменная1;");
	ОжидаемыйРезультат.Добавить("//}}MRG[ <-> ]");
	ОжидаемыйРезультат.Добавить("//{{MRG[ <-> ]");
	ОжидаемыйРезультат.Добавить("//Перем Переменная2;");
	ОжидаемыйРезультат.Добавить("//}}MRG[ <-> ]");
	ОжидаемыйОбъект.УстановитьДанные(ОжидаемыйРезультат);

	// Тогда

	Приложение = Поделка.НайтиЖелудь("Приложение");
	ИтоговыйОбъект = Поделка.НайтиЖелудь("ОписаниеОбъекта");
	Результат = Приложение.ПолучитьРезультатОбъединения(Конфигурация1, Конфигурация2);
	ИтоговыйОбъект.УстановитьДанные(Результат);
	Ожидаем.
		Что(
			ОжидаемыйОбъект.КакСтрока(),
			"Совпадает с ожидаемым результатом объединения")
		.Равно(ИтоговыйОбъект.КакСтрока()
	);
	
КонецПроцедуры

&Тест
Процедура ПроверитьРезультатОбъединенияКонфигураций_Модули_03() Экспорт

	// Дано

	Поделка = ПолучитьПоделку();
	ОписаниеОбъекта1 = Поделка.НайтиЖелудь("ОписаниеОбъекта");
	ОписаниеОбъекта2 = Поделка.НайтиЖелудь("ОписаниеОбъекта");

	// Когда

	Конфигурация1 = Новый Массив();
	Конфигурация1.Добавить("Перем Переменная1;");
	Конфигурация1.Добавить("Перем Переменная2;");
	ОписаниеОбъекта1.УстановитьДанные(Конфигурация1);
	Конфигурация2 = Новый Массив();
	Конфигурация2.Добавить("Перем Переменная1;");
	ОписаниеОбъекта2.УстановитьДанные(Конфигурация2);
	ОжидаемыйОбъект = Поделка.НайтиЖелудь("ОписаниеОбъекта");
	ОжидаемыйРезультат = Новый Массив();
	ОжидаемыйРезультат.Добавить("Перем Переменная1;");
	ОжидаемыйРезультат.Добавить("//{{MRG[ <-> ]");
	ОжидаемыйРезультат.Добавить("Перем Переменная2;");
	ОжидаемыйРезультат.Добавить("//}}MRG[ <-> ]");
	ОжидаемыйОбъект.УстановитьДанные(ОжидаемыйРезультат);

	// Тогда

	Приложение = Поделка.НайтиЖелудь("Приложение");
	ИтоговыйОбъект = Поделка.НайтиЖелудь("ОписаниеОбъекта");
	Результат = Приложение.ПолучитьРезультатОбъединения(Конфигурация1, Конфигурация2);
	ИтоговыйОбъект.УстановитьДанные(Результат);
	Ожидаем.
		Что(
			ОжидаемыйОбъект.КакСтрока(),
			"Совпадает с ожидаемым результатом объединения")
		.Равно(ИтоговыйОбъект.КакСтрока()
	);
	
КонецПроцедуры

&Тест
Процедура ПроверитьРезультатОбъединенияКонфигураций_Модули_04() Экспорт

	// Дано

	Поделка = ПолучитьПоделку();
	ОписаниеОбъекта1 = Поделка.НайтиЖелудь("ОписаниеОбъекта");
	ОписаниеОбъекта2 = Поделка.НайтиЖелудь("ОписаниеОбъекта");

	// Когда

	Конфигурация1 = Новый Массив();
	Конфигурация1.Добавить("Перем Переменная1;");
	ОписаниеОбъекта1.УстановитьДанные(Конфигурация1);
	Конфигурация2 = Новый Массив();
	Конфигурация2.Добавить("Перем Переменная1;");
	Конфигурация1.Добавить("Перем Переменная2;");
	ОписаниеОбъекта2.УстановитьДанные(Конфигурация2);
	ОжидаемыйОбъект = Поделка.НайтиЖелудь("ОписаниеОбъекта");
	ОжидаемыйРезультат = Новый Массив();
	ОжидаемыйРезультат.Добавить("Перем Переменная1;");
	ОжидаемыйРезультат.Добавить("//{{MRG[ <-> ]");
	ОжидаемыйРезультат.Добавить("//Перем Переменная2;");
	ОжидаемыйРезультат.Добавить("//}}MRG[ <-> ]");
	ОжидаемыйОбъект.УстановитьДанные(ОжидаемыйРезультат);

	// Тогда

	Приложение = Поделка.НайтиЖелудь("Приложение");
	ИтоговыйОбъект = Поделка.НайтиЖелудь("ОписаниеОбъекта");
	Результат = Приложение.ПолучитьРезультатОбъединения(Конфигурация1, Конфигурация2);
	ИтоговыйОбъект.УстановитьДанные(Результат);
	Ожидаем.
		Что(
			ОжидаемыйОбъект.КакСтрока(),
			"Совпадает с ожидаемым результатом объединения")
		.Равно(ИтоговыйОбъект.КакСтрока()
	);
	
КонецПроцедуры

